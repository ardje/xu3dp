#!/usr/bin/lua

local modes={
  ["3840x2160@30Hz"]= {
	["clock-frequency"] = 266640000,
        hactive=3840, ["hfront-porch"]=8,["hsync-len"]=144, ["hback-porch"]=8,
	vactive=2160, ["vfront-porch"]=54,["vsync-len"]=5, ["vback-porch"]=3
  },
  ["2560x1440@30Hz"] = {
	["clock-frequency"] = 266640000,
        hactive=2560, ["hfront-porch"]=8,["hsync-len"]=144, ["hback-porch"]=8,
	vactive=1440, ["vfront-porch"]=54,["vsync-len"]=5, ["vback-porch"]=3
  },
  ["1920x1080@60Hz"]= {
	["clock-frequency"] = 148500000,
        hactive=1920, ["hfront-porch"]=88,["hsync-len"]=44, ["hback-porch"]=148,
	vactive=1080, ["vfront-porch"]=4,["vsync-len"]=5, ["vback-porch"]=36
  }
}
--[[
clock: 266.640
hactive: 3840, hfront-porch 8, hback-porch 8, hsync-len 144
vactive 2160, vfront-porch 54, vsync-len 5, vback-porch 3
fdtput  /boot/exynos5422-odroidxu3.dtb /dp-controller@145B0000/display-timings/timing@1
  1920x1080 (0x80) 148.500MHz +HSync +VSync +preferred
        h: width  1920 start 2008 end 2052 total 2200 skew    0 clock  67.50KHz
        v: height 1080 start 1084 end 1089 total 1125           clock  60.00Hz
  3840x2160 (0x81) 533.280MHz +HSync -VSync *current +preferred
        h: width  3840 start 3848 end 3992 total 4000 skew    0 clock 133.32KHz
        v: height 2160 start 2214 end 2219 total 2222           clock  60.00Hz
  3840x2160 (0x82) 266.640MHz +HSync -VSync
        h: width  3840 start 3848 end 3992 total 4000 skew    0 clock  66.66KHz
        v: height 2160 start 2214 end 2219 total 2222           clock  30.00Hz
  2560x1440 (0x86) 266.640MHz +HSync -VSync
        h: width  2560 start 3848 end 3992 total 4000 skew    0 clock  66.66KHz
        v: height 1440 start 2214 end 2219 total 2222           clock  30.00Hz
--]]

local base="/dp-controller@145B0000"
local timing="/dp-controller@145B0000/display-timings/timing@1"
local dtb="/boot/exynos5422-odroidxu3.dtb"
local show=false
local doit=false

local commands={}
local help={}

local function fdtput(file,...)
	local args={...}
	local command="fdtput "..file.." "..table.concat(args," ")
	if show then print(command) end
	if doit then os.execute(command) end
end
help.show={"show needed commands to run"}
function commands.show(arg)
	table.remove(arg,1)
	show=true
end

help.set={"perform the actual commands needed (you might need sudo)"}
function commands.set(arg)
	table.remove(arg,1)
	doit=true
end

help.disable={"disable eDP in dtb"}
function commands.disable(arg)
	table.remove(arg,1)
	fdtput(dtb,"-t","s",base,"status","disabled")
end

help.enable={"enable eDP in dtb"}
function commands.enable(arg)
	table.remove(arg,1)
	fdtput(dtb,"-t","s",base,"status","okay")
end

help.list={"list all modes"}
function commands.list(arg)
	table.remove(arg,1)
	for k,v in pairs(modes) do
		print(k,modes[k].hactive,modes[k].vactive)
	end
end

help.mode={"<mode> set all parameters according to <mode>"}
function commands.mode(arg)
	table.remove(arg,1)
	local mode=arg[1]
	table.remove(arg,1)
	if not show and not doit then
		print("If you want me to do something you have to at least use set or show")
		return commands.help(arg)
	end
	print("mode:",mode)
	if modes[mode] == nil then
		print("I do not know how to set",mode)
	os.exit(1)
		return nil
	end
	local theMode=modes[mode]
	for k,v in pairs(theMode) do
		fdtput(dtb,timing,k,v)
	end
end
help.help={"list all commands"}
function commands.help(arg)
	table.remove(arg,1)
	for k,v in pairs(help) do
		print(k,help[k][1])
	end	
end

local function main(arg)
	if #arg == 0 then
		commands.help(arg)
	else
		while #arg > 0 do
			if commands[arg[1]] then
			commands[arg[1]](arg)
			else
				print("I do not know how to handle",arg[1])
				os.exit(1)
			end
		end
	end
end

main(arg)
